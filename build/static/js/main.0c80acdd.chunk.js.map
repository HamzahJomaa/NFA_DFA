{"version":3,"sources":["component/style.module.scss","component/template/Descrption.jsx","component/template/inputTable.jsx","component/calculate.js","component/template/Review.jsx","component/template/index.jsx","App.jsx","index.js"],"names":["module","exports","Index","props","getStates","stateNumber","content","index","push","React","data","setData","init","setInit","final","setFinal","Grid","container","spacing","item","xs","sm","TextField","required","id","name","label","fullWidth","variant","onChange","e","setLanguage","target","value","setStates","FormControl","InputLabel","Select","labelId","map","element","MenuItem","multiple","CellEditControlGrid","updateGraph","from","to","variable","old","type","drawer","initial","newDrawer","slice","concat","replaceAll","editRowsModel","setEditRowsModel","handleEditRowsModelChange","model","rows","states","languages","row","toString","columns","field","headerName","width","editable","finallRows","setFinalRows","setDrawer","handleCellEditCommit","updatedRows","console","log","updateTable","style","height","onEditRowsModelChange","onCellEditCommit","components","NoRowsOverlay","CustomNoRowsOverlay","className","graph","Graphviz","dot","classes","useStyles","root","viewBox","focusable","fill","fillRule","transform","cx","cy","rx","ry","d","defaultTheme","createTheme","makeStyles","theme","createStyles","flexDirection","palette","mode","fillOpacity","marginTop","arrayEquals","a","b","Array","isArray","length","every","val","getNewState","state","newState","variables","Object","keys","filter","text","inpt","FINAL_DFA","split","lst","DFA_VALUE","includes","tempState","Set","join","sort","checkState","NFA_DFA","INITIAL_STATE","FINAL_STATE","newScheme","values","v","newSchemeStates","some","r","FINALIZE_NFA","countOfDead","deadState","addDeadState","checkFinalState","DFA","Review","result","setResult","indexes","dataTemp","cols","toUpperCase","substring","Typography","gutterBottom","check","string","currentState","digit","currentObject","checkString","Chip","color","Copyright","align","Link","href","Date","getFullYear","steps","Checkout","setStatesCount","setLanguages","activeStep","setActiveStep","setRows","AppBar","position","elevation","sx","borderBottom","t","divider","Toolbar","noWrap","Container","component","display","Paper","my","md","p","Stepper","pt","pb","Step","StepLabel","step","getStepContent","Box","justifyContent","Button","onClick","mt","ml","getButtonName","primary","main","gunmetal","contrastText","pacificblue","bluencs","gunmetal2","bluesapphire","MuiButton","styleOverrides","fontSize","variants","backgroundColor","MuiInputLabel","left","MuiOutlinedInput","MuiChip","App","ThemeProvider","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0c80acdd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"check\":\"style_check__hrJ2Y\"};","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { FormControl } from \"@mui/material\";\n\nexport default function Index(props) {\n  const getStates = (stateNumber) => {\n    let content = [];\n    for (let index = 1; index <= stateNumber; index++) {\n      content.push(`q${index}`);\n    }\n    return content;\n  };\n\n  const [data, setData] = React.useState([]);\n  const [init, setInit] = React.useState([]);\n  const [final, setFinal] = React.useState([]);\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12}>\n          <TextField\n            required\n            id=\"languages\"\n            name=\"languages\"\n            label=\"Languages\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e) => {\n              props.setLanguage(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={12}>\n          <TextField\n            required\n            id=\"states\"\n            label=\"States\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e) => {\n              props.setStates(e.target.value);\n              setData(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={12}>\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\" variant=\"secondary\">Initial State</InputLabel>\n\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={init}\n              label=\"Country\"\n              variant=\"standard\"\n              fullWidth\n              name=\"country\"\n              onChange={(e) => {\n                setInit(e.target.value);\n                props.setInit(e.target.value);\n              }}\n            >\n              {getStates(data).map((element) => {\n                return <MenuItem value={element}>{element}</MenuItem>;\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={12}>\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\" variant=\"secondary\">Final State</InputLabel>\n            <Select\n              value={final}\n              label=\"Final State†\"\n              multiple\n              variant=\"standard\"\n              fullWidth\n              onChange={(e) => {\n                setFinal(e.target.value);\n                props.setFinal(e.target.value);\n              }}\n            >\n              {getStates(data).map((element) => {\n                return <MenuItem value={element}>{element}</MenuItem>;\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { GridOverlay , DataGrid } from \"@mui/x-data-grid\";\nimport { createTheme } from '@mui/material/styles';\nimport { createStyles, makeStyles } from '@mui/styles';\n\nimport { Grid } from \"@mui/material\";\n\nimport { Graphviz } from \"graphviz-react\";\nimport style from \"../style.module.scss\";\nimport { Box } from \"@mui/system\";\n\nexport default function CellEditControlGrid(props) {\n  const updateGraph = (from, to, variable, old,type) => {\n    let drawer = `digraph { \n      rankdir=LR; \n      init[label=\"\",shape=point];\n      node[shape=circle];\n      ${props.final}[shape=doublecircle];\n      ${props.initial};\n      init->${props.initial};}`;\n      \n\n    if (from && to && variable && old && type == \"update\") {\n      let newDrawer = old.slice(0, -1);\n      newDrawer = newDrawer.concat(`${from} -> ${to}[label=${variable}];}`);\n      return newDrawer;\n    }else if (type == \"remove\"){\n      let newDrawer = old.replaceAll(`${from} -> ${to}[label=${variable}];`,\"\");\n      return newDrawer;\n    }\n\n    return drawer;\n  };\n\n  const [editRowsModel, setEditRowsModel] = React.useState({});\n\n  const handleEditRowsModelChange = React.useCallback((model) => {\n    setEditRowsModel(model);\n  }, []);\n\n  const rows = [];\n\n  for (let index = 1; index <= props.states; index++) {\n    rows.push({\n      id: index,\n      variable: `q${index}`,\n    });\n  }\n  props.languages.map((element) => {\n    rows.map((row) => (row[element.toString()] = null));\n  });\n  const columns = [\n    { field: \"variable\", headerName: \"State\", width: 180, editable: false },\n  ];\n  props.languages.map((element) => {\n    columns.push({\n      field: element,\n      headerName: element,\n      width: 200,\n      editable: true,\n    });\n  });\n  const [finallRows, setFinalRows] = React.useState(rows);\n  let [drawer, setDrawer] = React.useState(updateGraph());\n\n  const handleCellEditCommit = React.useCallback(\n    ({ id, field, value }) => {\n      const updatedRows = finallRows.map((row) => {\n        if (row.id === id) {\n          if (value){\n            setDrawer(updateGraph(`q${id}`, value, field, drawer,\"update\"));\n          }else{\n            setDrawer(updateGraph(`q${id}`, row[field], field, drawer,\"remove\"));\n          }\n          \n          row[field] = value;\n\n\n          return { ...row };\n        }\n        return row;\n      });\n      setFinalRows(updatedRows);\n      console.log(updatedRows)\n      props.updateTable(updatedRows);\n    },\n    [finallRows,drawer]\n  );\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <Grid container>\n        <Grid item xs={12} sm={12}>\n          <div style={{ height: 400, width: \"100%\" }}>\n            <DataGrid\n              rows={finallRows}\n              columns={columns}\n              editRowsModel={editRowsModel}\n              onEditRowsModelChange={handleEditRowsModelChange}\n              onCellEditCommit={handleCellEditCommit}\n              components={{\n                NoRowsOverlay: CustomNoRowsOverlay,\n              }}\n            />\n          </div>\n        </Grid>\n        <Grid item xs={4} sm={4} >\n          <Box className={style.graph}>\n            <Graphviz dot={drawer}   />\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\n\nfunction CustomNoRowsOverlay() {\n  const classes = useStyles();\n\n  return (\n    <GridOverlay className={classes.root}>\n      <svg\n        width=\"120\"\n        height=\"100\"\n        viewBox=\"0 0 184 152\"\n        aria-hidden\n        focusable=\"false\"\n      >\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(24 31.67)\">\n            <ellipse\n              className=\"ant-empty-img-5\"\n              cx=\"67.797\"\n              cy=\"106.89\"\n              rx=\"67.797\"\n              ry=\"12.668\"\n            />\n            <path\n              className=\"ant-empty-img-1\"\n              d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n            />\n            <path\n              className=\"ant-empty-img-2\"\n              d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n            />\n            <path\n              className=\"ant-empty-img-3\"\n              d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n            />\n          </g>\n          <path\n            className=\"ant-empty-img-3\"\n            d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n          />\n          <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\n            <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n            <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n          </g>\n        </g>\n      </svg>\n      <div className={classes.label}>No Given States  or Languages</div>\n    </GridOverlay>\n  );\n}\nconst defaultTheme = createTheme();\nconst useStyles = makeStyles(\n  (theme) =>\n    createStyles({\n      root: {\n        flexDirection: 'column',\n        '& .ant-empty-img-1': {\n          fill: theme.palette.mode === 'light' ? '#aeb8c2' : '#262626',\n        },\n        '& .ant-empty-img-2': {\n          fill: theme.palette.mode === 'light' ? '#f5f5f7' : '#595959',\n        },\n        '& .ant-empty-img-3': {\n          fill: theme.palette.mode === 'light' ? '#dce0e6' : '#434343',\n        },\n        '& .ant-empty-img-4': {\n          fill: theme.palette.mode === 'light' ? '#fff' : '#1c1c1c',\n        },\n        '& .ant-empty-img-5': {\n          fillOpacity: theme.palette.mode === 'light' ? '0.8' : '0.08',\n          fill: theme.palette.mode === 'light' ? '#f5f5f5' : '#fff',\n        },\n      },\n      label: {\n        marginTop: theme.spacing(1),\n      },\n    }),\n  { defaultTheme },\n);\n\n\n\n// MuiButton-root MuiButton-button MuiButton-buttonPacificblue MuiButton-sizeMedium MuiButton-buttonSizeMedium MuiButtonBase-root css-e1efr9-MuiButtonBase-root-MuiButton-root","function arrayEquals(a, b) {\n  return (\n    Array.isArray(a) &&\n    Array.isArray(b) &&\n    a.length === b.length &&\n    a.every((val, index) => val === b[index])\n  );\n}\n\nconst getNewState = (data, state) => {\n  // Initializing New Object\n  let newState = { variable: state };\n\n  // Take the Keys of the NFA Object \n  // For Example:{ id:1, variable: \"q1\" , a:\"q1,q2\", b:\"q3,q4\" }\n  // Result: [id,variable,a,b]\n  let variables = Object.keys(data[0]);\n  \n\n  // Drop id & variable from the Array before\n  variables = variables.filter((text) => text != \"id\" && text != \"variable\");\n\n  // Maps on the variable\n  variables.map((inpt) => {\n    // Creates DFA Array\n    let FINAL_DFA = Array();\n    // Map on the given states\n    // For Example if state = \"q1,q2\" it maps on q1 and q2 to get the reachable state from a specific input\n    state.split(\",\").map((lst) => {\n      // Return the Reachable states from the NFA Transition Table\n      let DFA_VALUE = data.filter((element) => {\n        return element.variable == lst;\n      })[0][inpt.toString()];\n      // Checks if their is a Reachable States\n      if (DFA_VALUE && !FINAL_DFA.includes(DFA_VALUE)) {\n      // Add the Reachable States\n        FINAL_DFA.push(DFA_VALUE);\n      }\n    });\n    // Sort and Remove Duplicates from the Array\n    let tempState = [...new Set(FINAL_DFA.join(\",\").split(\",\"))]\n      .sort()\n      .join(\",\");\n    newState[inpt] = tempState;\n  });\n  return newState;\n};\n\nconst checkState = (data, state) => {\n  // checks if a state is existed in the NFA\n  const answer = data.filter((element) => {\n    return element.variable == state;\n  });\n  // check if the Length of the Array is 0\n  if (answer.length != 0) return true;\n  return false;\n};\n\nconst addDeadState = (data) => {\n  // Initialize the Dead State\n  let variables = Object.keys(data[0]);\n\n  // Intitialize the Count of Data\n  let countOfDead = 0;\n\n  // Drop id & variable from the Array before\n  variables = variables.filter((text) => text != \"id\" && text != \"variable\");\n\n  // Map on the data and check if their is no reachable state so we add DEADSTATE \n  data.map((element) => {\n    variables.map((inpt) => {\n      if (!element[inpt]) {\n        element[inpt] = `DEADSTATE`;\n        countOfDead++;\n      }\n    });\n  });\n\n  // Check if the Count of the DEADSTATES are greater than 0 to create the DEADSTATE\n  if (countOfDead > 0) {\n    let deadState = { variable: `DEADSTATE` };\n    variables.map((inpt) => {\n      deadState[inpt] = `DEADSTATE`;\n    });\n    data.push(deadState);\n  }\n\n  return data;\n};\n\nconst FINALIZE_NFA = (data, INITIAL_STATE, FINAL_STATE) => {\n  data.map((element) => {\n    if (\n      element.variable\n        .split(\",\")\n        .some((r) => FINAL_STATE.split(\",\").includes(r)) &&\n      element.variable === INITIAL_STATE\n    ) {\n      element[\"init\"] = true;\n      element[\"final\"] = true;\n    } else if (element.variable === INITIAL_STATE) {\n      element[\"init\"] = true;\n      element[\"final\"] = false;\n    } else if (\n      element.variable\n        .split(\",\")\n        .some((r) => FINAL_STATE.split(\",\").includes(r))\n    ) {\n      element[\"init\"] = false;\n      element[\"final\"] = true;\n    } else {\n      element[\"init\"] = false;\n      element[\"final\"] = false;\n    }\n  });\n  return data;\n};\n\nexport const NFA_DFA = (data, INITIAL_STATE, FINAL_STATE) => {\n  // Intitialize the DFA Transition Table\n  let newScheme = Array();\n\n  // Pushes the Initial State to the Transition Table\n  newScheme.push(getNewState(data, INITIAL_STATE));\n\n  // Pushes all Reachable States to an Arrray and Remove the Null Element\n  let newState = Object.values(...newScheme);\n  newState = newState.filter((v) => v != \"\");\n\n  // Pushes all the Named States to another Array\n  let newSchemeStates = Array();\n  newScheme.map((e) => {\n    newSchemeStates.push(e.variable);\n  });\n\n\n  // Sort Both Arrays\n  newSchemeStates = newSchemeStates.sort();\n  newState = newState.sort();\n\n  // Repeat the before Instruction untill the both arrays are equal\n  while (!arrayEquals(newSchemeStates, newState)) {\n    newSchemeStates = Array();\n    newScheme.map((e) => {\n      newSchemeStates.push(e.variable);\n    });\n    newState.map((element) => {\n      // checks if the state existed in the Transition Table  \n      if (!checkState(newScheme, element)) {\n        // Pushes the state to the new transition table\n        newScheme.push(getNewState(data, element));\n      }\n      newState.push(...Object.values(getNewState(data, element)));\n      newState = [...new Set(newState.filter((v) => v != \"\"))];\n    });\n    newSchemeStates = newSchemeStates.sort();\n    newState = newState.sort();\n  }\n\n\n  return FINALIZE_NFA(addDeadState(newScheme), INITIAL_STATE, FINAL_STATE);\n}\n\n\n\nexport const checkString = (string, DFA, INITIAL_STATE) => {\n  let currentState = INITIAL_STATE;\n  let current = string.split(\"\").map((digit) => {\n    let data = DFA.filter((e) => e.variable == currentState);\n    const currentObject = new Object(...data);\n    currentState = currentObject[digit];\n    return currentState.replaceAll(\",\", \"\");\n  });\n  return current;\n};\n\nexport const checkFinalState = (state, DFA) => {\n  if (state){\n    let currentState = new Object(...DFA.filter(e => e.variable.replaceAll(\",\",\"\") == state[state.length - 1]))\n    return currentState.final\n  }\n  // return FINAL_STATES.map((fState) => {\n  //   console.log(fState)\n  // });\n};\n\n","import * as React from \"react\";\nimport { Typography, Grid, TextField, Chip } from \"@mui/material\";\nimport { Graphviz } from \"graphviz-react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nimport style from \"../style.module.scss\";\n\nimport { NFA_DFA, checkString, checkFinalState } from \"../calculate\";\nimport { Box } from \"@mui/system\";\n\nexport default function Review(props) {\n  const [result, setResult] = React.useState([]);\n\n  let indexes = Object.keys(props.data[0]);\n  const updateGraph = (dataTemp) => {\n    let drawer = `digraph { \n      rankdir=LR; \n      init[label=\"\",shape=point];\n      node[shape=circle];`;\n\n    indexes = indexes.filter((text) => text != \"id\" && text != \"variable\");\n    dataTemp.map((element) => {\n      if (element.init) {\n        drawer = drawer.concat(`init->${element.variable};`);\n      }\n      if (element.final) {\n        drawer = drawer.concat(\n          `${element.variable.replaceAll(\",\", \"\")}[shape=doublecircle];`\n        );\n      }\n      indexes.map((inpt) => {\n        drawer = drawer.concat(\n          `${element.variable.replaceAll(\",\", \"\")}->${element[inpt].replaceAll(\n            \",\",\n            \"\"\n          )}[label=${inpt}];`\n        );\n      });\n    });\n    drawer = drawer.concat(`}`);\n    return drawer;\n  };\n\n  let cols = [];\n  indexes.map((index) => {\n    cols.push({ field: index, headerName: index.toUpperCase(), width: 200 });\n  });\n\n  const [data, setData] = React.useState(\n    NFA_DFA(props.data, props.initial, props.final)\n  );\n\n  let [drawer, setDrawer] = React.useState(updateGraph(data));\n\n  data.map((element, index) => {\n    element[\"id\"] = index;\n  });\n\n  React.useEffect(() => {\n    if (result.length > 0) {\n      setDrawer(\n        drawer\n          .substring(0, drawer.length - 1)\n          .concat(\n            `${result.concat(props.initial)}[style=filled,color=green]; }`\n          )\n      );\n      console.log(drawer)\n    } else {\n      setDrawer(updateGraph(data));\n    }\n  }, [result]);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        DFA Review\n      </Typography>\n      <Grid container>\n        <Grid item xs={12} sm={12}>\n          <div style={{ height: 400, width: \"100%\" }}>\n            <DataGrid rows={data} columns={cols} />\n          </div>\n        </Grid>\n        <Grid container className={style.check}>\n          <Grid item xs={8} sm={8}>\n            <Box>\n              <TextField\n                fullWidth\n                label=\"Outlined\"\n                fullWidth\n                variant=\"standard\"\n                onKeyUp={(e) => {\n                  setDrawer(updateGraph(data))\n                  setResult(checkString(e.target.value, data, props.initial));\n                }}\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            {checkFinalState(result, data) ? (\n              <Chip label=\"Accepted\" color=\"success\" variant=\"standard\" />\n            ) : (\n              <Chip label=\"Rejected\" color=\"error\" variant=\"standard\" />\n            )}\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n              <Typography component=\"h1\">\n                {result.join(\"  ->  \")}\n              </Typography>\n            </Grid> */}\n        </Grid>\n        <Grid item xs={12} sm={12}>\n          <Graphviz dot={drawer} className=\"chart\" />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import * as React from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Paper from \"@mui/material/Paper\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\n\nimport AddressForm from \"./Descrption\";\nimport InputTable from \"./inputTable\";\nimport Review from \"./Review\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst steps = [\n  \"NFA Description\",\n  \"NFA Transition Table\",\n  \"DFA Transition Table\",\n];\n\nexport default function Checkout() {\n  const [states, setStatesCount] = React.useState(0);\n  const [languages, setLanguages] = React.useState([]);\n  const [init, setInit] = React.useState();\n  const [final, setFinal] = React.useState();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const [rows, setRows] = React.useState([]);\n\n  let data = [\n    { \"1\": \"q1,q2\", \"0\": \"q3\", id: 1, variable: \"q1\" },\n    { \"1\": \"q2,q3\", \"0\": \"q3,q4\", id: 2, variable: \"q2\" },\n    { \"1\": null, \"0\": null, id: 3, variable: \"q3\" },\n    { \"1\": null, \"0\": null, id: 4, variable: \"q4\" },\n  ];;\n\n\n  function getStepContent(step) {\n    const setLanguage = (data) => {\n      setLanguages(data.split(\",\"));\n    };\n\n    const setStates = (data) => {\n      setStatesCount(data);\n    };\n\n    const getInit = (data) => {\n      setInit(data);\n    };\n\n    const getRows = (data) => {\n      setRows(data);\n    };\n\n    const getFinal = (data) => {\n      setFinal(data.join(\",\"));\n    };\n\n    switch (step) {\n      case 0:\n        return (\n          <AddressForm\n            setLanguage={setLanguage}\n            setStates={setStates}\n            setInit={getInit}\n            setFinal={getFinal}\n          />\n        );\n      case 1:\n        return (\n          <InputTable\n            updateTable={getRows}\n            states={states}\n            languages={languages}\n            initial={init}\n            final={final}\n          />\n        );\n      case 2:\n        return <Review data={rows} initial={init} final={final} />;\n      default:\n        return <Review data={rows} />;\n    }\n  }\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const getButtonName = () => {\n    switch (activeStep) {\n      case 0:\n        return \"Next\";\n        break;\n      case 1:\n        return \"Submit\";\n        break;\n      case 2:\n        return \"Check\";\n        break;\n    }\n  };\n\n  return (\n    <>\n      <AppBar\n        position=\"absolute\"\n        color=\"gunmetal\"\n        elevation={0}\n        sx={{\n          position: \"relative\",\n          borderBottom: (t) => `1px solid ${t.palette.divider}`,\n        }}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Theory of Computation\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container\n        component=\"div\"\n        style={{ height: \"auto\", display: \"flex\", flexDirection: \"column\" }}\n      >\n        <Paper\n          variant=\"outlined\"\n          sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}\n        >\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            NFA - DFA\n          </Typography>\n          <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n            {steps.map((label) => (\n              <Step color=\"gunmetal2\" key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            <React.Fragment>\n              {getStepContent(activeStep)}\n              <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                {activeStep !== 0 && (\n                  <Button\n                    color=\"gunmetal2\"\n                    variant=\"button\"\n                    onClick={handleBack}\n                    sx={{ mt: 3, ml: 1 }}\n                  >\n                    Back\n                  </Button>\n                )}\n\n                <Button\n                  onClick={activeStep === 2? \"\" : handleNext}\n                  sx={{ mt: 3, ml: 1 }}\n                  color=\"pacificblue\"\n                  variant=\"button\"\n                >\n                  {getButtonName()}\n                </Button>\n              </Box>\n            </React.Fragment>\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </Container>\n    </>\n  );  \n}\n","import { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Index from \"./component/template/\";\n\n// $gunmetal: #022f40ff;\n// $pacific-blue: #38aeccff;\n// $blue-ncs: #0090c1ff;\n// $gunmetal-2: #183446ff;\n// $blue-sapphire: #046e8fff;\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#0090c1ff\",\n    },\n    gunmetal: {\n      main: \"#022f40ff\",\n      contrastText: \"#38aeccff\",\n    },\n    pacificblue: {\n      main: \"#38aeccff,\",\n    },\n    bluencs: {\n      main: \"#0090c1ff\",\n    },\n    gunmetal2: {\n      main: \"#183446ff\",\n    },\n    bluesapphire: {\n      main: \"#046e8fff\",\n    },\n  },\n  components: {\n    // Name of the component\n    MuiButton: {\n      styleOverrides: {\n        // Name of the slot\n        root: {\n          // Some CSS\n          fontSize: \"1rem\",\n        },\n      },\n      variants: [\n        {\n          props: { variant: \"button\", color: \"pacificblue\" },\n          style: {\n            backgroundColor: \"#38aeccff\",\n          },\n        },\n        {\n          props: { variant: \"button\", color: \"gunmetal2\" },\n          style: {\n            backgroundColor: \"#183446ff\",\n          },\n        },\n      ],\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        // Name of the slot\n        root: {\n          // Some CSS\n          fontSize: \"1rem\",\n          position: \"absolute\",\n          left: 0,\n        },\n      },\n    },\n    MuiOutlinedInput:{\n      styleOverrides: {\n        // Name of the slot\n        root: {\n          // Some CSS\n          height: \"4vh\",\n        },\n      },\n    },\n    MuiChip:{\n      styleOverrides: {\n        // Name of the slot\n        root: {\n          // Some CSS\n          width: \"100%\"\n        },\n      },\n    }\n  },\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Index />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}